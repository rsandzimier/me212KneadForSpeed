Overview: This node subscribes to topic(s) published by the high level task planner which define the current task. This node then generates a trajectory and that trajectory. The trajectory takes the form of a 2-dimensional array of dimension nxm. n is the number of time steps. The trajectory will be followed at a certain rate (probably 100Hz). The trajectory must contain the robot positions at every time step (0.01 second increments if at 100Hz). If the trajectory takes 2 seconds and we use 100Hz, n would be 200, for example. m is the number of parameters it takes to represent the robot position (likely m=5: 3 motors + 1 gripper rotation + 1 gripper open/close). This node should make sure that the trajectory is within the robot workspace and should also ensure the speed/acceleration is appropriately limited. This node can call a workspace_check function and an IK function which will be written separately. To complete the current task, this node may generate sub-trajectories and wait for the trajectory to complete before sending the next sub-trajectory (ie if the task is to pick up an ingredient and drop it off at a certain location, this node may first generate and publish a trajectory that moves the gripper over an ingredient. Then once it completes that trajectory, this node generates and sends a new trajectory to close the gripper, etc until the full task is complete).

Subscribed topics: 
name: /finished_trajectory type: std_msgs/Bool This tells this node when the trajectory follower has completed the trajectory.
Some topic(s) published by the high level task planner which give all the information necessary to define the current task. This is not very defined right now. Please provide feedback to the team about what the high level task planner needs to publish. As a rough example, one possibility is the high level task planner may publish a topic (name TBD) which has a position of an ingredient and the position of an open hole on the pizza. This node then plans a trajectory that picks up the ingredient and drops it off at the specified locations. Other high level tasks this node should be able to generate trajectories for include: salt shaking, pushing pizza onto mobile robot, etc.

Published topics: 
name: /trajectory type: std_msgs/Float32MultiArray This topic tells the trajectory follower what trajectory to follow. The Float32MultiArray is of dimension nxm where n is the number of steps the trajectory uses, and m is the number of parameters it takes to define the robot position (likely m=5: 3 motors + 1 gripper rotation + 1 gripper open/close)
name: /finished_task type: std_msgs/Bool This topic basically is to tell the high level task planner that the current task is complete.
		
